<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="ScoreboardDataSet" targetNamespace="http://tempuri.org/ScoreboardDataSet.xsd" xmlns:mstns="http://tempuri.org/ScoreboardDataSet.xsd" xmlns="http://tempuri.org/ScoreboardDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="ScoreboardConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="ScoreboardConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Project1.Properties.Settings.GlobalReference.Default.ScoreboardConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ScoresTableAdapter" GeneratorDataComponentClassName="ScoresTableAdapter" Name="Scores" UserDataComponentName="ScoresTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ScoreboardConnectionString (Settings)" DbObjectName="Scoreboard.dbo.Scores" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Scores] WHERE (([Player] = @Original_Player) AND ([Score1] = @Original_Score1))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Player" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Player" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Score1" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Score1" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Scores] ([Player], [Score1]) VALUES (@Player, @Score1);
SELECT Player, Score1 FROM Scores WHERE (Player = @Player)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Player" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Player" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Score1" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Score1" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Player, Score1 FROM dbo.Scores</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Scores] SET [Player] = @Player, [Score1] = @Score1 WHERE (([Player] = @Original_Player) AND ([Score1] = @Original_Score1));
SELECT Player, Score1 FROM Scores WHERE (Player = @Player)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Player" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Player" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Score1" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Score1" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Player" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Player" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Score1" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Score1" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Player" DataSetColumn="Player" />
              <Mapping SourceColumn="Score1" DataSetColumn="Score1" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="ScoreboardDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="ScoreboardDataSet" msprop:Generator_DataSetName="ScoreboardDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Scores" msprop:Generator_RowEvHandlerName="ScoresRowChangeEventHandler" msprop:Generator_RowDeletedName="ScoresRowDeleted" msprop:Generator_RowDeletingName="ScoresRowDeleting" msprop:Generator_RowEvArgName="ScoresRowChangeEvent" msprop:Generator_TablePropName="Scores" msprop:Generator_RowChangedName="ScoresRowChanged" msprop:Generator_RowChangingName="ScoresRowChanging" msprop:Generator_TableClassName="ScoresDataTable" msprop:Generator_RowClassName="ScoresRow" msprop:Generator_TableVarName="tableScores" msprop:Generator_UserTableName="Scores">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Player" msprop:Generator_ColumnPropNameInRow="Player" msprop:Generator_ColumnPropNameInTable="PlayerColumn" msprop:Generator_ColumnVarNameInTable="columnPlayer" msprop:Generator_UserColumnName="Player" type="xs:int" />
              <xs:element name="Score1" msprop:Generator_ColumnPropNameInRow="Score1" msprop:Generator_ColumnPropNameInTable="Score1Column" msprop:Generator_ColumnVarNameInTable="columnScore1" msprop:Generator_UserColumnName="Score1" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Scores" />
      <xs:field xpath="mstns:Player" />
    </xs:unique>
  </xs:element>
</xs:schema>